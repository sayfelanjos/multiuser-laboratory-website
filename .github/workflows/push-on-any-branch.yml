# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
"on":
  push:
    branches:
      - "**"
jobs:
  build_and_preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install && npm install --prefix functions

      - name: Build
        run: npm run build && npm run build --prefix functions
        env:
          CI: false
          REACT_APP_FIREBASE_API_KEY: ${{secrets.REACT_APP_FIREBASE_API_KEY}}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{secrets.REACT_APP_FIREBASE_AUTH_DOMAIN}}
          REACT_APP_FIREBASE_PROJECT_ID: ${{secrets.REACT_APP_FIREBASE_PROJECT_ID}}
          REACT_APP_FIREBASE_STORAGE_BUCKET: ${{secrets.REACT_APP_FIREBASE_STORAGE_BUCKET}}
          REACT_APP_FIREBASE_MESSAGE_SENDER_ID: ${{secrets.REACT_APP_FIREBASE_MESSAGE_SENDER_ID}}
          REACT_APP_FIREBASE_APP_ID: ${{secrets.REACT_APP_FIREBASE_APP_ID}}
          REACT_APP_FIREBASE_MEASUREMENT_ID: ${{secrets.REACT_APP_FIREBASE_MEASUREMENT_ID}}
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_MULTIUSER_LABORATORY_WEBSITE }}"
          channelId: live
          projectId: multiuser-laboratory-website
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            # Recommended: Use GitHub repository name as project key
            -Dsonar.projectKey=${{ github.repository }}
            -Dsonar.projectName=${{ github.repository }}
            
            # Add any other analysis parameters here, e.g.,
             -Dsonar.sources=src
             -Dsonar.tests=tests
            
            # For pull request decoration (Developer Edition and above):
             -Dsonar.pullrequest.key=${{ github.event.pull_request.number }}
             -Dsonar.pullrequest.branch=${{ github.head_ref }}
             -Dsonar.pullrequest.base=${{ github.base_ref }}
             -Dsonar.pullrequest.github.repository=${{ github.repository }}
             -Dsonar.pullrequest.github.oauth_token=${{ secrets.GITHUB_TOKEN }}
            # To wait for Quality Gate status (can fail workflow):
             -Dsonar.qualitygate.wait=true
             -Dsonar.qualitygate.timeout=300 # Wait for 5 minutes
      - name: SonarQube Quality Gate Check
        if: success() && github.event_name == 'pull_request'
        uses: SonarSource/sonarqube-quality-gate-action@ # Use the latest version
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
